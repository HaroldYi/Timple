CREATE DATABASE timple;
USE timple;
CREATE TABLE member (
	memberId INTEGER PRIMARY KEY AUTO_INCREMENT,
	name NVARCHAR(10) NOT NULL,
	email NVARCHAR(50) NOT NULL,
	tel NVARCHAR(20) NOT NULL,
	pw NVARCHAR(20) NOT NULL,
	inform NVARCHAR(10) NOT NULL,
	alertCount INTEGER NULL,
	profile NVARCHAR(50) NULL
);

CREATE TABLE notification (
	NotificationId INTEGER PRIMARY KEY AUTO_INCREMENT,
	memseq INTEGER NOT NULL,
	content NVARCHAR(1000) NOT NULL,
	confirm NVARCHAR(10) NOT NULL,
	FOREIGN KEY(memseq) REFERENCES member(memberId) 
);

CREATE TABLE question (
	questionid INTEGER PRIMARY KEY AUTO_INCREMENT,
	content NVARCHAR(50) NULL
);

CREATE TABLE memquestion (
	memquestionId INTEGER PRIMARY KEY AUTO_INCREMENT,
	memseq INTEGER NOT NULL,
	questionSeq INTEGER NOT NULL,
	quereply NVARCHAR(50) NULL,
	FOREIGN KEY(memseq) REFERENCES member(memberId),
	FOREIGN KEY(questionSeq) REFERENCES question(questionid)
);

CREATE TABLE memo (
	memoid INTEGER PRIMARY KEY AUTO_INCREMENT,
	memseq INTEGER NOT NULL,
	content NVARCHAR(100) NULL,
	FOREIGN KEY(memseq) REFERENCES member(memberId)
);

CREATE TABLE friend (
	friendid INTEGER PRIMARY KEY AUTO_INCREMENT,
	memseq INTEGER NOT NULL,
	friendseq INTEGER NOT NULL,
	FOREIGN KEY(memseq) REFERENCES member(memberId),
	FOREIGN KEY(friendseq) REFERENCES member(memberid)
);

CREATE TABLE paper (
	paperid INTEGER PRIMARY KEY AUTO_INCREMENT,
	content NVARCHAR(50) NOT NULL,
	regdate DATE NOT NULL,
	sendmemseq INTEGER NOT NULL,
	receivememseq INTEGER NOT NULL,
	FOREIGN KEY(sendmemseq) REFERENCES member(memberid),
	FOREIGN KEY(receivememseq) REFERENCES member(memberid)
);

CREATE TABLE acceptance (
	acceptanceid INTEGER PRIMARY KEY AUTO_INCREMENT,
	paperseq INTEGER NOT NULL,
	accept INTEGER NULL,
	FOREIGN KEY(paperseq) REFERENCES paper(paperid)
);

CREATE TABLE board (
	boardid INTEGER PRIMARY KEY AUTO_INCREMENT,
	post_type NVARCHAR(10) NOT NULL,
	memseq INTEGER NOT NULL,
	subject NVARCHAR(200) NOT NULL,
	content NVARCHAR(1000) NOT NULL,
	fontnum INTEGER NOT NULL,
	regdate TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
	readcount INTEGER NOT NULL,
	readcom INTEGER NOT NULL,
	imgfilename VARCHAR(100) NULL,
	imgorgfilename VARCHAR(100) NULL,
	thread INTEGER NOT NULL,
	depth INTEGER NOT NULL,
	FOREIGN KEY(memseq) REFERENCES member(memberid) 
);

CREATE TABLE boardcomment (
	commentid INTEGER PRIMARY KEY AUTO_INCREMENT,
	boardseq INTEGER NOT NULL,
	memseq INTEGER NOT NULL,
	regdate TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
	content NVARCHAR(100) NULL,
	FOREIGN KEY(boardseq) REFERENCES board(boardid),
	FOREIGN KEY(memseq) REFERENCES member(memberid)
);

CREATE TABLE commentlabor (
	commentlaborid INTEGER PRIMARY KEY AUTO_INCREMENT,
	commentseq INTEGER NOT NULL,
	content NVARCHAR(200) NOT NULL,
	reporter INTEGER NULL,
	FOREIGN KEY(commentseq) REFERENCES boardcomment(commentid),
	FOREIGN KEY(reporter) REFERENCES member(memberid)
);

CREATE TABLE labor (
	laborid INTEGER PRIMARY KEY AUTO_INCREMENT,
	boardseq INTEGER NOT NULL,
	laborcontent NVARCHAR(300) NULL,
	reporter INTEGER NULL,
	FOREIGN KEY(boardseq) REFERENCES board(boardid),
	FOREIGN KEY(reporter) REFERENCES member(memberid)
);

CREATE TABLE qna (
	qnaid INTEGER PRIMARY KEY AUTO_INCREMENT,
	memseq INTEGER NOT NULL,
	Classification NVARCHAR(100) NOT NULL,
	subject NVARCHAR(100) NOT NULL,
	content NVARCHAR(1000) NOT NULL,
	open NVARCHAR(9) NOT NULL,
	replystate NVARCHAR(9) NULL,
	regdate TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
	qkind NVARCHAR(10) NULL,
	FOREIGN KEY(memseq) REFERENCES member(memberid)
);

CREATE TABLE manager (
	managerid INTEGER PRIMARY KEY AUTO_INCREMENT,
	id NVARCHAR(20) NOT NULL,
	pw NVARCHAR(30) NOT NULL
);

CREATE TABLE alertmessage (
	alertmessageid INTEGER PRIMARY KEY AUTO_INCREMENT,
	managerseq INTEGER NOT NULL,
	content NVARCHAR(1000) NULL,
	memberseq INTEGER NOT NULL,
	FOREIGN KEY(managerseq) REFERENCES manager(managerid),
	FOREIGN KEY(memberseq) REFERENCES member(memberid)
);

CREATE TABLE qnareply (
	qnareplyid INTEGER PRIMARY KEY AUTO_INCREMENT,
	qnareplyseq INTEGER NOT NULL,
	regdate TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
	subject NVARCHAR(200) NOT NULL,
	content NVARCHAR(2000) NOT NULL,
	managerseq INTEGER NOT NULL,
	FOREIGN KEY(qnareplyseq) REFERENCES qna(qnaid),
	FOREIGN KEY(managerseq) REFERENCES manager(managerid) 
);

CREATE TABLE notice (
	noticeid INTEGER PRIMARY KEY AUTO_INCREMENT,
	managerseq INTEGER NOT NULL,
	subject NVARCHAR(100) NOT NULL,
	content NVARCHAR(2000) NOT NULL,
	regdate TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
	FOREIGN KEY(managerseq) REFERENCES manager(managerid)
);

CREATE TABLE onecategory (
	onecategoryid INTEGER PRIMARY KEY AUTO_INCREMENT,
	onename NVARCHAR(40) NOT NULL
);

CREATE TABLE twocategory (
	twocategoryid INTEGER PRIMARY KEY AUTO_INCREMENT,
	twoname NVARCHAR(40) NOT NULL,
	onecategoryseq INTEGER NOT NULL,
	FOREIGN KEY(onecategoryseq) REFERENCES onecategory(onecategoryid)
);

CREATE TABLE occupation (
	occupationid INTEGER PRIMARY KEY AUTO_INCREMENT,
	memseq INTEGER NOT NULL,
	twocategoryseq INTEGER NOT NULL,
	career INTEGER NOT NULL,
	FOREIGN KEY(memseq) REFERENCES member(memberid),
	FOREIGN KEY(twocategoryseq) REFERENCES twocategory(twocategoryId)
);

CREATE TABLE project (
	projectid INTEGER PRIMARY KEY AUTO_INCREMENT,
	name NVARCHAR(100) NOT NULL,
	startday DATE NOT NULL,
	endday DATE NOT NULL,
	content NVARCHAR(1000) NOT NULL,
	open NVARCHAR(9) NOT NULL,
	thumnail NVARCHAR(100) NULL,
	twoseq INTEGER NOT NULL,
	FOREIGN KEY(twoseq) REFERENCES twocategory(twocategoryid) 
);

CREATE TABLE team (
	teamid INTEGER PRIMARY KEY AUTO_INCREMENT,
	projectseq INTEGER NOT NULL,
	memseq INTEGER NOT NULL,
	grade INTEGER NOT NULL,
	participation INTEGER NOT NULL,
	FOREIGN KEY(participation) REFERENCES member(memberid) 
);

CREATE TABLE data (
	dataid INTEGER PRIMARY KEY AUTO_INCREMENT,
	filename VARCHAR(100) NOT NULL,
	orgfilename VARCHAR(100) NOT NULL,
	fileexplanation NVARCHAR(100) NULL,
	projectseq INTEGER NOT NULL,
	FOREIGN KEY(projectseq) REFERENCES project(projectid)
);

CREATE TABLE filelog (
	logid INTEGER PRIMARY KEY AUTO_INCREMENT,
	dataseq INTEGER NOT NULL,
	state INTEGER NOT NULL,
	editDate DATE NOT NULL,
	teamseq INTEGER NOT NULL,
	FOREIGN KEY(dataseq) REFERENCES data(dataid),
	FOREIGN KEY(teamseq) REFERENCES team(teamid)
);

-- 보류사항
CREATE TABLE teamNotice (
	noticeid INTEGER PRIMARY KEY AUTO_INCREMENT,
	memseq INTEGER NOT NULL,
	subject NVARCHAR(100) NOT NULL,
	content NVARCHAR(2000) NOT NULL,
	regdate TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
	FOREIGN KEY(noticeid) REFERENCES team(teamid)
);

CREATE TABLE teammemo (
	teammemoid INTEGER PRIMARY KEY AUTO_INCREMENT,
	teamseq INTEGER NOT NULL,
	subject NVARCHAR(100) NOT NULL,
	content NVARCHAR(1000) NOT NULL,
	regdate TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
	theme INTEGER NULL,
	FOREIGN KEY(teamseq) REFERENCES team(teamid)
);

CREATE TABLE teamboardsort (
	teamboardsortid INTEGER PRIMARY KEY AUTO_INCREMENT,
	projectseq INTEGER NOT NULL,
	subject NVARCHAR(20) NOT NULL,
	sort INTEGER NOT NULL,
	FOREIGN KEY(projectseq) REFERENCES project(projectid)
);

CREATE TABLE teamboard (
	teamboardid INTEGER PRIMARY KEY AUTO_INCREMENT,
	subject NVARCHAR(100) NOT NULL,
	content NVARCHAR(1000) NOT NULL,
	teamseq INTEGER NOT NULL,
	regdate DATE NOT NULL,
	readcount INTEGER NOT NULL,
	filename VARCHAR(100) NULL,
	orgfilename VARCHAR(100) NULL,
	theme INTEGER NOT NULL,
	teamboardsortseq INTEGER NOT NULL,
	teamboardgrade INTEGER NOT NULL,
	FOREIGN KEY(teamseq) REFERENCES team(teamid),
	FOREIGN KEY(teamboardsortseq) REFERENCES teamboardsort(teamboardsortid)
);

CREATE TABLE teamcomment (
	teamcommentid INTEGER PRIMARY KEY AUTO_INCREMENT,
	teamcomment NVARCHAR(1000) NOT NULL,
	regdate TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
	teamboardseq INTEGER NOT NULL,
	teamseq INTEGER NOT NULL,
	FOREIGN KEY(teamboardseq) REFERENCES teamboard(teamboardid),
	FOREIGN KEY(teamseq) REFERENCES team(teamid)
);

CREATE TABLE permission (
	permissionid INTEGER PRIMARY KEY AUTO_INCREMENT,
	teamboardseq INTEGER NULL,
	teamseq INTEGER NULL,
	FOREIGN KEY(teamboardseq) REFERENCES teamboard(teamboardid),
	FOREIGN KEY(teamseq) REFERENCES team(teamid)
);

CREATE TABLE calendar (
	calendarid INTEGER PRIMARY KEY AUTO_INCREMENT,
	subject NVARCHAR(100) NOT NULL,
	content NVARCHAR(1000) NOT NULL,
	startday DATE NOT NULL,
	endday DATE NOT NULL,
	color NVARCHAR(10) NULL
);

CREATE TABLE teamcalendar (
	teamcalendarid INTEGER PRIMARY KEY AUTO_INCREMENT,
	teamseq INTEGER NOT NULL,
	calendarseq INTEGER NOT NULL,
	FOREIGN KEY(teamseq) REFERENCES team(teamid),
	FOREIGN KEY(calendarseq) REFERENCES calendar(calendarid)
);

CREATE TABLE BP (
	bpid INTEGER PRIMARY KEY AUTO_INCREMENT,
	projectseq INTEGER NOT NULL,
	name NVARCHAR(100) NOT NULL,
	startday DATE NOT NULL,
	endday DATE NOT NULL,
	explanation NVARCHAR(1000) NULL,
	state NVARCHAR(10) NOT NULL,
	FOREIGN KEY(projectseq) REFERENCES project(projectid)
);

CREATE TABLE teambp (
	teambpid INTEGER PRIMARY KEY AUTO_INCREMENT,
	bpseq INTEGER NOT NULL,
	teamseq INTEGER NOT NULL,
	grade INTEGER NULL,
	FOREIGN KEY(bpseq) REFERENCES BP(bpid),
	FOREIGN KEY(teamseq) REFERENCES team(teamid)
);

CREATE TABLE business (
	businessid INTEGER PRIMARY KEY AUTO_INCREMENT,
	bpseq INTEGER NOT NULL,
	subject NVARCHAR(100) NOT NULL,
	filename NVARCHAR(100) NULL,
	orgfilename NVARCHAR(100) NULL,
	content NVARCHAR(2000) NOT NULL,
	state NVARCHAR(3) NOT NULL,
	importance INTEGER NOT NULL,
	editdate DATE NOT NULL,
	startday DATE NOT NULL,
	endday DATE NOT NULL,
	FOREIGN KEY(bpseq) REFERENCES BP(bpid)
);

CREATE TABLE teambusiness (
	teambusinessid INTEGER PRIMARY KEY AUTO_INCREMENT,
	businessseq INTEGER NOT NULL,
	teambpseq INTEGER NOT NULL,
	FOREIGN KEY(businessseq) REFERENCES business(businessid),
	FOREIGN KEY(teambpseq) REFERENCES teambp(teambpid)
);

CREATE TABLE businesscomment (
	businesscommentid INTEGER PRIMARY KEY AUTO_INCREMENT,
	businessseq INTEGER NOT NULL,
	teamseq INTEGER NOT NULL,
	content NVARCHAR(300) NULL,
	FOREIGN KEY(businessseq) REFERENCES business(businessid),
	FOREIGN KEY(teamseq) REFERENCES team(teamid)
);

CREATE TABLE businesslog (
	businesslogid INTEGER PRIMARY KEY AUTO_INCREMENT,
	businessseq INTEGER NOT NULL,
	beforestate NVARCHAR(200) NOT NULL,
	afterstate NVARCHAR(200) NOT NULL,
	editdate TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
	FOREIGN KEY(businessseq) REFERENCES business(businessid)
);

CREATE TABLE repeatday (
	repeatdayid INTEGER PRIMARY KEY AUTO_INCREMENT,
	day NVARCHAR(10) NOT NULL
);


CREATE TABLE repeattbl (
	repeatid INTEGER PRIMARY KEY AUTO_INCREMENT,
	businessseq INTEGER NOT NULL,
	repeatdayseq INTEGER NULL,
	FOREIGN KEY(businessseq) REFERENCES business(businessid),
	FOREIGN KEY(repeatdayseq) REFERENCES repeatday(repeatdayid)
);

CREATE TABLE introducepdf (
	introducepdfid INTEGER PRIMARY KEY AUTO_INCREMENT,
	fimename VARCHAR(100) NULL,
	orgfimename VARCHAR(100) NULL
);

CREATE TABLE budget (
	budgetid INTEGER PRIMARY KEY AUTO_INCREMENT,
	projectid INTEGER NOT NULL,
	usageb NVARCHAR(100) NOT NULL,
	inputb INTEGER DEFAULT 0 NULL,
	outputb INTEGER DEFAULT 0 NULL,
	btime TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
	FOREIGN KEY(projectid) REFERENCES project(projectid) 
);

COMMIT;

-- member 테이블

INSERT INTO member (MEMBERID, name, email, tel, pw, inform, alertcount, profile)
VALUES( NULL ,'임현수', 'aaa001@gmail.com' , '010-1223-6434' , '1234'  ,'n' , '0' , '프로필 사진 경로명');

INSERT INTO member (MEMBERID, name, email, tel, pw, inform, alertcount, profile)
VALUES( NULL ,'김현덕', 'aaa002@gmail.com' , '010-4123-1938' , '1234'  ,'n' , '0' , '프로필 사진 경로명');

INSERT INTO member (MEMBERID, name, email, tel, pw, inform, alertcount, profile)
VALUES( NULL ,'임수희', 'aaa003@gmail.com' , '010-0233-2916' , '1234'  ,'y' , '0' , '프로필 사진 경로명');

INSERT INTO member (MEMBERID, name, email, tel, pw, inform, alertcount, profile)
VALUES( NULL ,'김성현', 'aaa004@gmail.com' , '010-8613-7131' , '1234'  ,'n' , '0' , '프로필 사진 경로명');

INSERT INTO member (MEMBERID, name, email, tel, pw, inform, alertcount, profile)
VALUES( NULL ,'안지후', 'aaa005@gmail.com' , '010-9813-8249' , '1234'  , 'n' , '0' , '프로필 사진 경로명');





-- board 테이블


INSERT INTO board (boardId,post_type,memSeq,subject,content,fontNum,regdate,readCount,readCom,imgFileName,imgOrgFileName,thread,depth) 
VALUES (null,'포스트',1,'안녕하세요','이번에 8월말에 새로 프로젝트를 시작하려고 하는데 경력 2년차 이상 같이 모십니다. ',1,STR_TO_DATE('2014-06-10-12-12-15','%Y-%m-%d %T'),3,5,null,null,1000,1);

INSERT INTO board (boardId,post_type,memSeq,subject,content,fontNum,regdate,readCount,readCom,imgFileName,imgOrgFileName,thread,depth) 
VALUES (null,'포스트',2,'이번 프로젝트에 대해...','사정이 있어 프로젝트 시작일짜를 변경할까 합니다.  ',1,STR_TO_DATE('2014-05-20 16-12-15','%Y-%m-%d %T'),2,4,null,null,2000,1);

INSERT INTO board (boardId,post_type,memSeq,subject,content,fontNum,regdate,readCount,readCom,imgFileName,imgOrgFileName,thread,depth) 
VALUES (null,'포스트',3,'가입했는데요','여기 쓸만하나요 ㅎㅎ 다른 곳 쓰다가 마음에 안들어서 여기 왔어요',1,STR_TO_DATE('2014-05-28 13-34-19','%Y-%m-%d %T'),12,0, null,null,3000,1);

INSERT INTO board (boardId,post_type,memSeq,subject,content,fontNum,regdate,readCount,readCom,imgFileName,imgOrgFileName,thread,depth) 
VALUES (null,'포스트',4,'이 xxx넘아','이성현 이넘아 프로젝트 중도 포기하냐 나쁜넘아',1,STR_TO_DATE('2014-05-29 14-34-19','%Y-%m-%d %T'),103,0, null,null,4000,1);
-- select * from board;



-- boardcomment 테이블

INSERT INTO boardcomment (commentId,boardSeq,memSeq,regdate,content) VALUES (NULL , 2 , 4 , STR_TO_DATE('2014-05-20-16-45-42','YYYY-MM-DD-HH24-MI-SS'),'정확한 날짜가 언제인가요 ? ' );
INSERT INTO boardcomment (commentId,boardSeq,memSeq,regdate,content) VALUES (NULL , 2 , 5 , STR_TO_DATE('2014-05-20-16-48-50','YYYY-MM-DD-HH24-MI-SS'),'왜 멋대로 바꾸냐 죽을래? ' );

-- select * from boardcomment;





-- CommentLabor 테이블
INSERT INTO commentlabor (commentLaborId,commentSeq,content,reporter) VALUES (null, 2,'초면인데 막말하시나요 신고 들어갑니다.', 2);

-- select * from commentlabor;



-- Question 테이블 --

INSERT INTO question (QUESTIONID,CONTENT) VALUES (null, '나의 보물 1호는?');
INSERT INTO question (QUESTIONID,CONTENT) VALUES (null, '초등학교 때 가장 친한 친구 이름은?');
INSERT INTO question (QUESTIONID,CONTENT) VALUES (null, '아버지의 성함은?');
INSERT INTO question (QUESTIONID,CONTENT) VALUES (null, '출신 고등학교 이름은?');
INSERT INTO question (QUESTIONID,CONTENT) VALUES (null, '나의 추억의 장소는?');


-- select * from question;



-- memQuestion 테이블 --


INSERT INTO memquestion (MEMQUESTIONID,MEMSEQ,QUESTIONSEQ,QUEREPLY) VALUES (null, 1, 1, '자전거');
INSERT INTO memquestion (MEMQUESTIONID,MEMSEQ,QUESTIONSEQ,QUEREPLY) VALUES (null, 2, 1, '시계');
INSERT INTO memquestion (MEMQUESTIONID,MEMSEQ,QUESTIONSEQ,QUEREPLY) VALUES (null, 3, 4, '배명고등학교');
INSERT INTO memquestion (MEMQUESTIONID,MEMSEQ,QUESTIONSEQ,QUEREPLY) VALUES (null, 4, 2, '서경창');
INSERT INTO memquestion (MEMQUESTIONID,MEMSEQ,QUESTIONSEQ,QUEREPLY) VALUES (null, 5, 5, '광안리');


-- select * from memquestion;



-- Labor 테이블
INSERT INTO labor (laborId,boardSeq,laborContent,reporter) VALUES (null, 4 ,'욕은 삼가 주시기 바랍니다.',5);


-- set * from labor;


-- QandA 테이블 
INSERT INTO qna (QnAId,memSeq,classification,subject,content,open,replystate,regdate,Qkind) VALUES (null,2,'게시물분류','여기 라이센스 비용은 어떻게 되나요? ','결제를 안하나요? 공짜로 쓰면 제약 있나요?','공개','답변완료',STR_TO_DATE('2014-04-11-10-16-58','YYYY-MM-DD-HH24-MI-SS'),'게시물종류');
INSERT INTO qna (QnAId,memSeq,classification,subject,content,open,replystate,regdate,Qkind) VALUES (null,5,'게시물분류','프로젝트 트리 구조에 대하여... ','저희가 업무가 많아서요 하나의 프로젝트에 최대 몇개의 bp를 등록할수 있나요 그리고 하나의 bp안에 최대 몇개의 업무가 등록 가능한가요?','비공개','처리중',STR_TO_DATE('2014-05-03-10-16-58','YYYY-MM-DD-HH24-MI-SS'),'게시물종류');

-- select * from qanda;



-- manager 테이블 --
INSERT INTO manager (managerId, id, pw) VALUES (null,'admin','admin1234');

-- select * from manager;


-- notice 테이블

INSERT INTO notice(NOTICEID, managerSeq, subject , content, regdate) VALUES(null, 1, '사이트가 다음달에 개편됩니다.', '안녕하십니까 저희 사이트를 방문해주시는 모든 분들께 감사드리며 여러분들의 성원에 힘입어 저희 사이트가 보다 좋은 서비스로 보답하기 위해 3일 동안 접속을 제한합니다. 감사합니다. ', STR_TO_DATE('2014-06-14-14-17-38', 'YYYY-MM-DD-HH24-MI-SS') );

select * from notice;


-- QandAReply(답글) 테이블 --여기 a글자 뺏음
INSERT INTO qnareply (qnareplyId,qnareplyseq,regdate,subject,content,managerSeq) VALUES (null,1,STR_TO_DATE('2014-06-12-14-17-38','YYYY-MM-DD-HH24-MI-SS'),'re:여기 라이센스 비용은 어떻게 되나요?','저희 프로그램은 무료버전과 유료버전이 있고 무료버전은 프로젝트 갯수 생성에 제한이 있습니다. 최대 3개까지 생성할 수 있습니다. ',1);

-- select * from qandareply;



-- Notification 테이블 
INSERT INTO notification (NotificationId, memSeq, content, confirm) VALUES (null, 3,'팀원이 탈퇴했습니다.' , 'n');
INSERT INTO notification (NotificationId, memSeq, content, confirm) VALUES (null, 1,'업무가 변동되었습니다. ' , 'n');
INSERT INTO notification (NotificationId, memSeq, content, confirm) VALUES (null, 2,'업무가 완료되었습니다. ' , 'n');

select * from notification;



-- alertMessage(경고메세지) -- (alertMessageId:무관)
INSERT INTO alertmessage (alertMessageId,managerSeq,content,memberSeq) VALUES (null,1,' 게시판에서 욕은 자제해주세요 3번이상 신고접수시 한달 간 저희 사이트에 접속이 제한될 수 있습니다. ', 4 );

-- select * from alertmessage;




-- Paper(쪽지) --
INSERT INTO paper (PaperId,content,regDate,sendMemSeq,receiveMemSeq) VALUES (null,'현덕아 너의 업무 좀 변경해도 될까?', '2014-06-09-17-42-10', 1, 2);
INSERT INTO paper (PaperId,content,regDate,sendMemSeq,receiveMemSeq) VALUES (null,'어.. 머 상관 없는데 어떤 업무로 바뀌어?','2014-06-10-13-42-10', 2, 1);
INSERT INTO paper (PaperId,content,regDate,sendMemSeq,receiveMemSeq) VALUES (null,'마케팅 쪽을 맡아주었으면 해 팀원 한명이 탈퇴를 해서 ','2014-06-10-16-22-10', 1, 2);
INSERT INTO paper (PaperId,content,regDate,sendMemSeq,receiveMemSeq) VALUES (null,'알았어 맡아 볼께 ','2014-06-11-17-23-10', 2, 1);
INSERT INTO paper (PaperId,content,regDate,sendMemSeq,receiveMemSeq) VALUES (null,'그래 고맙다 자세한 일정은 내일 알려줄께 ','2014-06-11-18-03-10', 1, 2);
INSERT INTO paper (PaperId,content,regDate,sendMemSeq,receiveMemSeq) VALUES (null,'안지후님 저희 프로젝트에 들어오실래요? ','2014-06-12-18-03-10', 1, 5);

-- select * from paper;




-- acceptance 테이블  
-- 1. 확인전 2. 수락. 3. 거부

INSERT INTO acceptance (acceptanceId,paperSeq,accept) VALUES (null,6,1);

-- select * from acceptance;





-- Memo(메모) -- (memoId:무관)
INSERT INTO memo (memoId,memSeq,content) VALUES (null,1,'다음주 화요일에 새로운 프로젝트 진행할 예정');
INSERT INTO memo (memoId,memSeq,content) VALUES (null,1,'다음주 수요일에 새로운 프로젝트를 위한 팀원 모집');
INSERT INTO memo (memoId,memSeq,content) VALUES (null,1,'프로젝트 생성 이후에 bp등록');
INSERT INTO memo (memoId,memSeq,content) VALUES (null,1,'새로운 프로젝트는 2014년 말에 완료할 것');
INSERT INTO memo (memoId,memSeq,content) VALUES (null,1,'프로젝트를 위한 에산 확보 중요!!');
INSERT INTO memo (memoId,memSeq,content) VALUES (null,2,'다음주에 만들어지는 프로젝트에 합류할 예정');
INSERT INTO memo (memoId,memSeq,content) VALUES (null,2,'프로젝트 기간동안 술을 자제 한다. ');


-- select * from memo;





-- oneCategory(1차직종) --
INSERT INTO onecategory (oneCategoryId,oneName) VALUES (null,'Marketing');
INSERT INTO onecategory (oneCategoryId,oneName) VALUES (null,'It/internet');
INSERT INTO onecategory (oneCategoryId,oneName) VALUES (null,'R&D');
INSERT INTO onecategory (oneCategoryId,oneName) VALUES (null,'생산제조');
INSERT INTO onecategory (oneCategoryId,oneName) VALUES (null,'전문');
INSERT INTO onecategory (oneCategoryId,oneName) VALUES (null,'Design');


-- twoCategory(2차직종)
INSERT INTO twocategory (twoCategoryId,twoName,oneCategorySeq) VALUES (null,'광고',1);
INSERT INTO twocategory (twoCategoryId,twoName,oneCategorySeq) VALUES (null,'상품기획',1);
INSERT INTO twocategory (twoCategoryId,twoName,oneCategorySeq) VALUES (null,'웹기획',2);
INSERT INTO twocategory (twoCategoryId,twoName,oneCategorySeq) VALUES (null,'디자인',2);
INSERT INTO twocategory (twoCategoryId,twoName,oneCategorySeq) VALUES (null,'프로그래머',2);
INSERT INTO twocategory (twoCategoryId,twoName,oneCategorySeq) VALUES (null,'응용프로그래머',2);
INSERT INTO twocategory (twoCategoryId,twoName,oneCategorySeq) VALUES (null,'화학',3);
INSERT INTO twocategory (twoCategoryId,twoName,oneCategorySeq) VALUES (null,'기계',3);
INSERT INTO twocategory (twoCategoryId,twoName,oneCategorySeq) VALUES (null,'건설',3);
INSERT INTO twocategory (twoCategoryId,twoName,oneCategorySeq) VALUES (null,'전기',3);
INSERT INTO twocategory (twoCategoryId,twoName,oneCategorySeq) VALUES (null,'시공',4);
INSERT INTO twocategory (twoCategoryId,twoName,oneCategorySeq) VALUES (null,'설치',4);
INSERT INTO twocategory (twoCategoryId,twoName,oneCategorySeq) VALUES (null,'조립',4);
INSERT INTO twocategory (twoCategoryId,twoName,oneCategorySeq) VALUES (null,'경영분석',5);
INSERT INTO twocategory (twoCategoryId,twoName,oneCategorySeq) VALUES (null,'리서치',5);
INSERT INTO twocategory (twoCategoryId,twoName,oneCategorySeq) VALUES (null,'그래픽',6);
INSERT INTO twocategory (twoCategoryId,twoName,oneCategorySeq) VALUES (null,'출판',6);
INSERT INTO twocategory (twoCategoryId,twoName,oneCategorySeq) VALUES (null,'편집',6);
INSERT INTO twocategory (twoCategoryId,twoName,oneCategorySeq) VALUES (null,'의류',6);
INSERT INTO twocategory (twoCategoryId,twoName,oneCategorySeq) VALUES (null,'제품',6);





-- Occupation(회원-직종) 
INSERT INTO occupation (occupationId,memSeq,twocategorySeq,career) VALUES (null,1,4,1);
INSERT INTO occupation (occupationId,memSeq,twocategorySeq,career) VALUES (null,2,5,1);
INSERT INTO occupation (occupationId,memSeq,twocategorySeq,career) VALUES (null,3,6,3);
INSERT INTO occupation (occupationId,memSeq,twocategorySeq,career) VALUES (null,4,6,5);
INSERT INTO occupation (occupationId,memSeq,twocategorySeq,career) VALUES (null,5,6,2);

select * from occupation;





--  Friend(친구리스트) --
-- INSERT INTO Friend (friendId, memSeq,friendSeq) VALUES (1,1,2); (아직 insert 불가) -- 만들어서 주석 달아 놀것!
-- INSERT INTO Friend (friendId, memSeq,friendSeq) VALUES (2,1,3);
-- INSERT INTO Friend (friendId, memSeq,friendSeq) VALUES (3,1,16);
-- INSERT INTO Friend (friendId, memSeq,friendSeq) VALUES (4,2,13);
-- INSERT INTO Friend (friendId, memSeq,friendSeq) VALUES (5,3,11);
-- INSERT INTO Friend (friendId, memSeq,friendSeq) VALUES (6,5,18);
-- INSERT INTO Friend (friendId, memSeq,friendSeq) VALUES (6,5,19);







-- Project(프로젝트)
INSERT INTO project (projectId,name,startDay,endDay,content,open,thumnail,twoSeq) VALUES (1,'은행 윈코스 전산 프로그램','2014-07-13-01-00-00','2016-07-13-12-00-00','은행에서 이루어 지는 모든 예금 및 적금과 대출을 위한 통합 전산 프로그램 개발 ',1,'프로젝트의 썸네일 경로명',6);
INSERT INTO project (projectId,name,startDay,endDay,content,open,thumnail,twoSeq) VALUES (2,'000회사 회계 솔루션','2014-08-03-01-00-00','2015-08-03-01-00-00','회사의 모든 매출목록 및 돈의 사용내역을 기록한 장부를 프로그램으로 구현 ',1,'프로젝트의 썸네일 경로명',6);
INSERT INTO project (projectId,name,startDay,endDay,content,open,thumnail,twoSeq) VALUES (3,'000학교 학생관리 프로그램','2014-09-03-01-00-00','2015-09-03-01-00-00','총 1000명의 학생들의 데이터베이스를 활용한 모든 활동을 관리하는 통합 솔루션 ',1,'프로젝트의 썸네일 경로명',6);

select * from project;




-- Team(팀원) 

-- 은행 프로젝트에 1번에서 5번 회원이 참여 하고 1번 회원이 팀장이다.
INSERT INTO team(teamId,projectSeq,memSeq,grade,participation) VALUES (null,1,1,1,1);
INSERT INTO team(teamId,projectSeq,memSeq,grade,participation) VALUES (null,1,2,2,1);
INSERT INTO team(teamId,projectSeq,memSeq,grade,participation) VALUES (null,1,3,2,1);
INSERT INTO team(teamId,projectSeq,memSeq,grade,participation) VALUES (null,1,4,2,2);
INSERT INTO team(teamId,projectSeq,memSeq,grade,participation) VALUES (null,1,5,2,1);


-- 회계 솔루션 프로젝트에 1번에서 5번 회원이 참여하고 2번 회원이 팀장이다. 
INSERT INTO team(teamId,projectSeq,memSeq,grade,participation) VALUES (null,2,1,2,1);
INSERT INTO team(teamId,projectSeq,memSeq,grade,participation) VALUES (null,2,2,1,1);
INSERT INTO team(teamId,projectSeq,memSeq,grade,participation) VALUES (null,2,3,2,1);
INSERT INTO team(teamId,projectSeq,memSeq,grade,participation) VALUES (null,2,4,2,2);
INSERT INTO team(teamId,projectSeq,memSeq,grade,participation) VALUES (null,2,5,2,1);

-- 학생관리 프로젝트에 1번에서 5번 회원이 참여하고 3번 회원이 팀장이다. 
INSERT INTO team(teamId,projectSeq,memSeq,grade,participation) VALUES (null,3,1,2,1);
INSERT INTO team(teamId,projectSeq,memSeq,grade,participation) VALUES (null,3,2,2,1);
INSERT INTO team(teamId,projectSeq,memSeq,grade,participation) VALUES (null,3,3,1,1);
INSERT INTO team(teamId,projectSeq,memSeq,grade,participation) VALUES (null,3,4,2,1);
INSERT INTO team(teamId,projectSeq,memSeq,grade,participation) VALUES (null,3,5,2,1);


-- select * from team;




-- 여기까지

-- Budget(예산) --
INSERT INTO budget(budgetId,projectId,usageb,inputb,outputb,bTime) VALUES (null,1,'팀 회비 수거',100000,default,'2014-06-13-10-14-23');
INSERT INTO budget(budgetId,projectId,usageb,inputb,outputb,bTime) VALUES (null,1,'각종 사무용품 구입',default,15000,'2014-06-14-10-14-23');
INSERT INTO budget(budgetId,projectId,usageb,inputb,outputb,bTime) VALUES (null,1,'회식비',default,55000,'2014-06-12-10-14-23');
INSERT INTO budget(budgetId,projectId,usageb,inputb,outputb,bTime) VALUES (null,1,'팀회비 충원',100000 , default ,'2014-06-12-10-14-23');

-- select * from budget;



-- Data(자료실) --
INSERT INTO data (dataId,fileName,orgFileName,fileExplanation,projectSeq) VALUES (null,'프로젝트 요구사항1.pdf','프로젝트 요구사항.pdf','프로젝트 요구사항을 정리한 문서',1);
INSERT INTO data (dataId,fileName,orgFileName,fileExplanation,projectSeq) VALUES (null,'프로젝트 요구사항2.pdf','프로젝트 요구사항.pdf','프로젝트 요구사항을 정리한 문서',2);
INSERT INTO data (dataId,fileName,orgFileName,fileExplanation,projectSeq) VALUES (null,'프로젝트 요구사항3.pdf','프로젝트 요구사항.pdf','프로젝트 요구사항을 정리한 문서',3);
INSERT INTO data (dataId,fileName,orgFileName,fileExplanation,projectSeq) VALUES (null,'팀원역할분담1.pdf','팀원역할분담.pdf','각 팀원들의 해야할일과 범위 ',1);


-- select * from data;




-- fileLog(파일로그) --
-- 즉 팀원번호가 1번인 팀장이 업로드를 했고 나머지 4명의 회원번호 2-5번이 다운로드를 했다. 
-- 1 : 업로드 2: 다운로드
INSERT INTO filelog (logId,dataSeq,state,editDate,teamSeq) VALUES (null,1,1,'2014-06-13-11-23-44',1);
INSERT INTO filelog (logId,dataSeq,state,editDate,teamSeq) VALUES (null,1,2,'2014-06-14-11-45-13',2);
INSERT INTO filelog (logId,dataSeq,state,editDate,teamSeq) VALUES (null,1,2,'2014-06-15-12-49-13',3);
INSERT INTO filelog (logId,dataSeq,state,editDate,teamSeq) VALUES (null,1,2,'2014-06-15-13-43-13',4);
INSERT INTO filelog (logId,dataSeq,state,editDate,teamSeq) VALUES (null,1,2,'2014-06-16-10-41-13',5);

-- select * from filelog;





-- Calendar(일정(캘린더)) --

INSERT INTO calendar (calendarId,subject,content,startDay,endDay,color) VALUES (null,'내일 12시에 만남','서로 인사하는 시간을 가지기 위한 모임이 송파구 잠실 롯데월드 6층 000레스토랑에서 진행될 예정입니다.','2014-06-13-18-00-00','2014-06-13-22-00-00','blue');
INSERT INTO calendar (calendarId,subject,content,startDay,endDay,color) VALUES (null,'다음주에 회의가 9시에 진행','은행 담당자들과의 만남을 통해 업무를 파악하는 시간입니다.','2014-06-15-09-00-00','2014-06-15-12-00-00','red');
INSERT INTO calendar (calendarId,subject,content,startDay,endDay,color) VALUES (null,'다음주 수요일은 쉼','공휴일이라 재충전하는 시간을 가질 예정입니다.','2014-06-17-06-00-00', '2014-06-17-23-00-00','black');

-- select * from calendar;



-- teamcalendar 테이블 오타나서 여기서는 teal로 씀
-- 팀원번호 1-5 사람들이 내일 12시에 만남에 참여하기로 예정
INSERT INTO teamcalendar (TEAMCALENDARID, TEAMSEQ, calendarseq) VALUES(null, 1, 1);
INSERT INTO teamcalendar (TEAMCALENDARID, TEAMSEQ, calendarseq) VALUES(null, 2, 1);
INSERT INTO teamcalendar (TEAMCALENDARID, TEAMSEQ, calendarseq) VALUES(null, 3, 1);
INSERT INTO teamcalendar (TEAMCALENDARID, TEAMSEQ, calendarseq) VALUES(null, 4, 1);
INSERT INTO teamcalendar (TEAMCALENDARID, TEAMSEQ, calendarseq) VALUES(null, 5, 1);



-- 팀원번호 1-5 사람들이 다음주에 회의가 9시에 진행을 하기로 예정
INSERT INTO teamcalendar (TEAMCALENDARID, TEAMSEQ, calendarseq) VALUES(null, 1, 2);
INSERT INTO teamcalendar (TEAMCALENDARID, TEAMSEQ, calendarseq) VALUES(null, 2, 2);
INSERT INTO teamcalendar (TEAMCALENDARID, TEAMSEQ, calendarseq) VALUES(null, 3, 2);
INSERT INTO teamcalendar (TEAMCALENDARID, TEAMSEQ, calendarseq) VALUES(null, 4, 2);
INSERT INTO teamcalendar (TEAMCALENDARID, TEAMSEQ, calendarseq) VALUES(null, 5, 2);


-- 팀원번호 1-5 사람들이 다음주 수요일은 쉬기로 예정
INSERT INTO teamcalendar (TEAMCALENDARID, TEAMSEQ, calendarseq) VALUES(null, 1, 3);
INSERT INTO teamcalendar (TEAMCALENDARID, TEAMSEQ, calendarseq) VALUES(null, 2, 3);
INSERT INTO teamcalendar (TEAMCALENDARID, TEAMSEQ, calendarseq) VALUES(null, 3, 3);
INSERT INTO teamcalendar (TEAMCALENDARID, TEAMSEQ, calendarseq) VALUES(null, 4, 3);
INSERT INTO teamcalendar (TEAMCALENDARID, TEAMSEQ, calendarseq) VALUES(null, 5, 3);

-- select * from teamcalendar;



-- teammemo 테이블
INSERT INTO teammemo( teammemoid, teamseq, subject, content, regdate, theme ) VALUES 
(null, 1, '팀원 특성', '각 팀원들의 성격의 장단점 파악하여 적절한 곳의 업무를 분배한다. ', default, null);

INSERT INTO teammemo( teammemoid, teamseq, subject, content, regdate, theme ) VALUES 
(null, 1, '업무 파악', '프로젝트에 어떠한 업무들이 있는지 파악한다. ', default, null);

select * from teammemo;



-- teamboardsort 테이블


INSERT INTO teamboardsort (TEAMBOARDSORTID,PROJECTSEQ,SUBJECT,SORT) VALUES(null, 1, '윈코스', 1);
INSERT INTO teamboardsort (TEAMBOARDSORTID,PROJECTSEQ,SUBJECT,SORT) VALUES(null, 2, '더존', 1);
INSERT INTO teamboardsort (TEAMBOARDSORTID,PROJECTSEQ,SUBJECT,SORT) VALUES(null, 3, '더스쿨', 1);


-- select * from teamboardsort;




-- teamboard 테이블

INSERT INTO teamboard(TEAMBOARDID, SUBJECT, content, teamseq, regdate, readcount, filename, orgfilename, theme, teamboardsortseq, teamboardgrade)VALUES(1, '팀원추가 모집에 관하여...', '기존의 팀원으로는 현재 업무를 감당하기가 많이 힘들 것 같습니다. 그래서 2명정도 추가로 팀원을 받을까 하는데 다들 어떻게 생각하세요?', 1, '2014-06-17', 2, null, null, 1 ,1, 2 );
INSERT INTO teamboard(TEAMBOARDID, SUBJECT, content, teamseq, regdate, readcount, filename, orgfilename, theme, teamboardsortseq, teamboardgrade)VALUES(2, '이번에 새로 들어온 팀원입니다.', '인사 차 글옵립니다. 팀장이랑 예전부터 알고 지낸 사이라서 소개로 들어오게 됐네요 앞으로 잘 부탁드립니다. ', 2, '2014-06-18', 0, null, null, 1 ,1, 1 );
INSERT INTO teamboard(TEAMBOARDID, SUBJECT, content, teamseq, regdate, readcount, filename, orgfilename, theme, teamboardsortseq, teamboardgrade)VALUES(3, '저도 인사드립니다. ', '저는 아는 사람이 없지만 이번 일을 계기로 친해졌으면 해요', 3, '2014-06-18', 1, null, null, 1 ,1, 1 );

-- select * from teamboard;



-- teamcomment 테이블 (팀 게시판의 댓글 테이블)
-- teamboard 2번 게시물에 대한 댓글들
INSERT INTO teamcomment (TEAMCOMMENTID,TEAMCOMMENT,REGDATE,TEAMBOARDSEQ,TEAMSEQ) VALUES(null, '반가워요 우리 열심히 해봐요', default, 2, 5);
INSERT INTO teamcomment (TEAMCOMMENTID,TEAMCOMMENT,REGDATE,TEAMBOARDSEQ,TEAMSEQ) VALUES(null, '저도 잘 부탁드립니다. ', default, 2, 3);

-- select * from teamcomment;



-- permission 테이블
-- teamboard의 첫번째 게시물에 대하여 팀원번호가 1번에서 5번까지인 회원만 읽을 수 있다. 

INSERT INTO permission (PERMISSIONID,TEAMBOARDSEQ,TEAMSEQ) VALUES(null, 1, 1);
INSERT INTO permission (PERMISSIONID,TEAMBOARDSEQ,TEAMSEQ) VALUES(null, 1, 2);
INSERT INTO permission (PERMISSIONID,TEAMBOARDSEQ,TEAMSEQ) VALUES(null, 1, 3);
INSERT INTO permission (PERMISSIONID,TEAMBOARDSEQ,TEAMSEQ) VALUES(null, 1, 4);
INSERT INTO permission (PERMISSIONID,TEAMBOARDSEQ,TEAMSEQ) VALUES(null, 1, 5);

-- select * from PERMISSION;




-- bp 테이블

-- 은행 프로젝트에 관한 3개의 bp
INSERT INTO BP (BPID,PROJECTSEQ,NAME,STARTDAY,ENDDAY,EXPLANATION,STATE) VALUES(null, 1, '예금 및 입출금 프로세스', '2014-07-13-01-00-00','2015-01-20-12-00-00','은행의 기본적인 업무인 입금과 출금, 거기서 파생되는 예금과 적금시스템을 구현','진행중');
INSERT INTO BP (BPID,PROJECTSEQ,NAME,STARTDAY,ENDDAY,EXPLANATION,STATE) VALUES(null, 1, '대출 및 결제 시스템', '2014-09-13-01-00-00','2015-04-20-12-00-00','대출금액과 대출금리, 기간을 활용한 각종 대출상품과 그에 대한 시스템을 구축','진행중');
INSERT INTO BP (BPID,PROJECTSEQ,NAME,STARTDAY,ENDDAY,EXPLANATION,STATE) VALUES(null, 1, '인사관리 및 프로그램 관리', '2014-10-23-01-00-00','2015-10-22-12-00-00','프로그램에 상품을 추가 혹은 삭제하거나 금액이나 기간 , 이율을 조정하거나 그에 대한 권한을 정할 때 어떠한 직원들이 쓸 수 있는지에 대한 시스템','진행중');

-- select * from bp;


-- teambp 테이블
-- 1: 일반  2: 책임자
-- 예금에 관해서는 팀번호가 2번인 회원이 책임자
-- 대출에 관해서는 팀번호가 3번인 회원이 책임자
-- 인사에 관해서는 팀번호가 5번인 회원이 책임자
-- 팀번호 1번과 4번은 그냥 일반
INSERT INTO teambp (teambpid, bpseq, teamseq, grade) VALUES(null, 1, 2, 2);
INSERT INTO teambp (teambpid, bpseq, teamseq, grade) VALUES(null, 2, 3, 2);
INSERT INTO teambp (teambpid, bpseq, teamseq, grade) VALUES(null, 3, 5, 2);
INSERT INTO teambp (teambpid, bpseq, teamseq, grade) VALUES(null, 1, 1, 1);
INSERT INTO teambp (teambpid, bpseq, teamseq, grade) VALUES(null, 2, 4, 1);

-- select * from teambp;

-- business  테이블
-- 업무 중요도 -- 1: 하 2: 중 3: 상
INSERT INTO business (businessid, bpseq, subject, filename, orgfilename, content , state, importance, editdate, startday, endday) VALUES(null, 1, 'input과 output 기능 업무', null, null, '돈이 들어올때 총 잔액이 더해지고 나갈 때 마이너스되게 하는 기능', '대기', 2, '2014-06-12-13-30-00',  '2014-07-16-13-30-00', '2014-07-29-13-30-00');
INSERT INTO business (businessid, bpseq, subject, filename, orgfilename, content , state, importance, editdate, startday, endday) VALUES(null, 1, '트렌잭션과 금리계산', null, null, '돈이 동시에 입금되거나 출금될시 순서가 어긋나는 것을 방지하기 위한 기능과 예금 만기시 돌려주어야할 금액 계산하는 기능', '대기', 3, '2014-06-12-13-30-00', '2014-08-19-13-30-00', '2014-07-29-13-30-00');
INSERT INTO business (businessid, bpseq, subject, filename, orgfilename, content , state, importance, editdate, startday, endday) VALUES(null, 2, '상황방식에 따른 금리 적용', null, null, '만기에 돈을 일시로 갚는 만기일시상환과 이자와 원금을 균등하게 나누어 갚는 균등분할상환 방식을 구현하는 기능', '대기', 3, '2014-06-12-13-30-00',  '2015-01-17-13-30-00', '2015-01-29-13-30-00');
INSERT INTO business (businessid, bpseq, subject, filename, orgfilename, content , state, importance, editdate, startday, endday) VALUES(null, 3, '직급에 다른 접근권한', null, null, '회사의 직원들의 직급에 따라 프로그램을 수정할 수 있는 권한의 범위를 결정 할 것 ', '대기', 3, '2014-06-12-13-30-00',  '2014-12-17-13-30-00',  '2015-01-27-13-30-00');
rollback;
select * from business;
-- select * from business;


-- businesscomment 테이블
-- 2번 업무에 대해 팀원번호가 2번인 사람이 댓글을 달음
-- 2번 업무에 대해 팀원번호가 4번인 사람이 댓글을 달음
INSERT INTO businesscomment( businesscommentid , businessseq, teamseq, content) VALUES (null,2,2 ,'기능이 좀 겹치는 것 같은데 같이 공유해요' );  
INSERT INTO businesscomment( businesscommentid , businessseq, teamseq, content) VALUES (null,2,4 ,'저도요' );  

-- select * from  businesscomment;


-- teambusiness 테이블 
-- 1번 업무(예금)은 팀번호가 2번인 사람이 책임
-- 2번 업무(예금)은 팀번호가 1번인 사람이 책임
-- 3번 업무(대출)는 팀번호가 3번인 사람이 책임
-- 4번 업무(인사)는 팀번호가 5번인 사람이 책임
INSERT INTO teambusiness(teambusinessid, businessseq, teambpseq) VALUES(null, 1, 1);
INSERT INTO teambusiness(teambusinessid, businessseq, teambpseq) VALUES(null, 2, 4);
INSERT INTO teambusiness(teambusinessid, businessseq, teambpseq) VALUES(null, 3, 2);
INSERT INTO teambusiness(teambusinessid, businessseq, teambpseq) VALUES(null, 4, 3);


-- select * from teambusiness;


-- businesslog 테이블
-- 1번 업무에 대한 변경내역
INSERT INTO businesslog(businesslogid, businessseq, beforestate , afterstate, editdate) VALUES(null, 1, 'input과 output 둘다 구현', 'input만 구현, output은 나중에 구현', default);

--
select * from businesslog;


-- repeatday 테이블

INSERT INTO repeatday (repeatdayid , day) VALUES (null, '월,수');

select * from repeatday;



-- repeat 테이블


-- 2번 업무는 월,수에 반복된다. 
INSERT INTO repeattbl (repeatid , businessseq, repeatdayseq) VALUES (null, 2, 1);  
COMMIT;


